apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: hive-server
  labels:
    app: hive
    hive: server
{{- block "extraMetadata" . }}
{{- end }}
spec:
  serviceName: hive-server
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: hive
      hive: server
{{- if .Values.hive.labels }}
{{ toYaml .Values.hive.labels | indent 6 }}
{{- end }}
  template:
    metadata:
      labels:
        app: hive
        hive: server
{{- if .Values.hive.labels }}
{{ toYaml .Values.hive.labels | indent 8 }}
{{- end }}
      annotations:
        hive-common-configmap-hash: {{ include (print $.Template.BasePath "/hive-common-config.yaml") . | sha256sum }}
        hive-common-secret-hash: {{ include (print $.Template.BasePath "/hive-common-secrets.yaml") . | sha256sum }}
        hive-server-configmap-hash: {{ include (print $.Template.BasePath "/hive-server-config.yaml") . | sha256sum }}
        presto-secrets-hash: {{ include (print $.Template.BasePath "/presto-secrets.yaml") . | sha256sum }}
{{- if .Values.hive.annotations }}
{{ toYaml .Values.hive.annotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{ toYaml .Values.hive.securityContext | indent 8 }}
      containers:
      - name: hiveserver2
        args: ["--service", "hiveserver2"]
        image: "{{ .Values.hive.image.repository }}:{{ .Values.hive.image.tag }}"
        imagePullPolicy: {{ .Values.hive.image.pullPolicy }}
        ports:
        - name: thrift
          containerPort: 10000
          protocol: TCP
        - name: ui
          containerPort: 10002
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        env:
        - name: HIVE_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              name: hive-server-config
              key: log-level
{{ include "hive-env" . | indent 8 }}
        - name: MY_MEM_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: hiveserver2
              resource: requests.memory
        - name: MY_MEM_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: hiveserver2
              resource: limits.memory
        volumeMounts:
        # openshift requires volumeMounts for VOLUMEs in a Dockerfile
        - name: hive-metastore-db-data
          mountPath: /var/lib/hive
        - name: hive-warehouse
          mountPath: /user/hive/warehouse
        - name: namenode-empty
          mountPath: /hadoop/dfs/name
        - name: datanode-empty
          mountPath: /hadoop/dfs/data
        resources:
{{ toYaml .Values.hive.server.resources | indent 10 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.hive.terminationGracePeriodSeconds }}
      serviceAccount: hive
      volumes:
      # these emptyDir volumes are necessary because Openshift requires VOLUMEs
      # in a Dockerfile have a corresponding volumeMount
      - name: hive-warehouse
        emptyDir: {}
      - name: namenode-empty
        emptyDir: {}
      - name: datanode-empty
        emptyDir: {}
      - name: hive-metastore-db-data
        emptyDir: {}
