---

#
# Presto and reporting-operator TLS
#
- name: Check for the existence of the reporting-operator prestoTLS.secretName
  k8s_facts:
    api_version: v1
    kind: Secret
    name: "{{ meteringconfig_spec['reporting-operator'].spec.config.prestoTLS.secretName }}"
    namespace: "{{ meta.namespace }}"
  no_log: true
  register: reporting_operator_tls_secret_buf
  when: meteringconfig_tls_enabled

- name: Check for the existence of the reporting-operator prestoAuth.secretName
  k8s_facts:
    api_version: v1
    kind: Secret
    name: "{{ meteringconfig_spec['reporting-operator'].spec.config.prestoAuth.secretName }}"
    namespace: "{{ meta.namespace }}"
  no_log: true
  register: reporting_operator_auth_secret_buf
  when: meteringconfig_tls_enabled

- name: Configure reporting-operator to use existing presto server TLS secret data
  set_fact:
    meteringconfig_reporting_operator_presto_server_ca_certificate: "{{ reporting_operator_tls_secret_buf.resources[0].data['ca.crt'] | b64decode }}"
  no_log: true
  when: meteringconfig_tls_enabled and reporting_operator_tls_secret_buf.resources | length > 0

- name: Configure reporting-operator to use existing presto client TLS secret data
  set_fact:
    meteringconfig_reporting_operator_presto_server_ca_certificate: "{{ reporting_operator_auth_secret_buf.resources[0].data['ca.crt'] | b64decode }}"
    meteringconfig_reporting_operator_presto_client_ca_certificate: "{{ reporting_operator_auth_secret_buf.resources[0].data['ca.crt'] | b64decode }}"
    meteringconfig_reporting_operator_client_cert: "{{ reporting_operator_auth_secret_buf.resources[0].data['tls.crt'] | b64decode }}"
    meteringconfig_reporting_operator_client_key: "{{ reporting_operator_auth_secret_buf.resources[0].data['tls.key'] | b64decode }}"
  no_log: true
  when: meteringconfig_tls_enabled and reporting_operator_auth_secret_buf.resources | length > 0
